on:
  push:
    tags:
    - 'v*'
name: Handle Release
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Asset (linux)
      run: GOOS=linux   GOARCH=amd64 go build -o bin/prometheus-aws-discovery-linux-amd64 ./cmd/prometheus-aws-discovery/...
    - name: Build Asset (darwin)
      run: GOOS=darwin   GOARCH=amd64 go build -o bin/prometheus-aws-discovery-darwin-amd64 ./cmd/prometheus-aws-discovery/...

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          Build also available as docker image:
          `daspawnw/prometheus-aws-discovery:${{ github.ref }}`

    - name: Upload Release Asset (linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: bin/prometheus-aws-discovery-linux-amd64
        asset_name: prometheus-aws-discovery-linux-amd64
        asset_content_type: application/x-executable
    - name: Upload Release Asset (darwin)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: bin/prometheus-aws-discovery-darwin-amd64
        asset_name: prometheus-aws-discovery-darwin-amd64
        asset_content_type: application/x-mach-binary
 
